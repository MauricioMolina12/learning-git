html {
  box-sizing: border-box;
  font-size: 16px;
  font-family: sans-serif;
  scroll-behavior: smooth;
}

*,
*::after,
*::before {
  box-sizing: inherit;
}

a[href="#top"] {
  margin: 1rem;
  display: block;
  font-size: 2rem;
  text-align: center;
  text-decoration: none;
}

p {
  margin: 0;
}

h2 {
  margin-top: 50vh;
  text-align: center;
}

img {
  margin: auto;
  display: block;
  max-width: 100%;
  height: auto;
}

.menu {
  margin-bottom: 100vh;
  font-size: 125%;
}

.menu li {
  margin-bottom: 1rem;
}

.container {
  margin: 0 auto;
  width: 80%;
  height: 80vh;
  background-color: #222;
  border: medium solid #000;
}

.item {
  padding: 1rem;
  font-size: 1rem;
  background-color: #666;
  border: medium solid #999;
}

.sub-item{
  padding: 1rem;
  border: medium solid #ccc;
  background-color: #ddd;

}

.grid-explicit {
  display: grid;
  height: auto;
  /* grid-template-rows: 6rem 19vh 80% 190px;
  grid-template-columns: 50% 10% 1fr; */
  margin-bottom: 80rem;
  grid-template-columns: 20% repeat(2, 30%)20%;
  grid-template-rows: repeat(5, auto);
  /*grid-template-columns: 20% repeat(2,30%) 20%;
  grid-template-rows: 10% 20% 20% 20% 10%; */
}

.grid-explicit .item:nth-child(10) {
  grid-area: 2/3/3/5;
  background-color: aqua;
}

.grid-explicit .item:nth-child(12) {
  background-color: aqua;
  grid-column: span 3;
  grid-row: span 2;
}

/* .grid-explicit .item:nth-child(15) {
  background-color: red;
  grid-row: 1 / span 3;
  grid-column: 1 / span 4;

} */

.grid-line-names {
  height: 100vh;
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(3, 1fr);
  grid-template-columns: [linea-c1] 1fr [linea-c2] 1fr [linea-c3] 1fr [linea-c4];
  grid-template-rows: [linea-r1] 1fr [linea-r2] 1fr [linea-r3] 1fr [linea-r4];
  grid-template-rows: [linea-r1] auto [linea-r2] auto [linea-r3] auto [linea-r4];
}

.grid-line-names .item:nth-child(3) {
  background-color: cyan;
  grid-row: linea-r3/linea-r4;
  grid-column: linea-c1/linea-c4;
}

.grid-areas {
  display: grid;
  grid-template-columns: 1fr 200px;
  grid-template-rows: 100px repeat(2, 1fr) 60px;
  grid-template-areas:
    "header header"
    "content sidebar"
    "content ."
    "footer footer";
}

.header {
  grid-area: header;
}

.content {
  grid-area: content;
}

.sidebar {
  grid-area: sidebar;
}

.footer {
  grid-area: footer;
}

.areas {
  display: grid;
  grid-template-columns: 1fr 200px;
  grid-template-rows: 100px repeat(2, 1fr) 60px;
  grid-template-areas:
    "header header"
    "article aside"
    "article ."
    "footer footer"
  ;
}

.header {
  grid-area: header;
}

.article {
  grid-area: article;
}

.aside {
  grid-area: aside;
}

.footer {
  grid-area: footer;
}

.grid-implicit {
  /* display: grid; */
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: repeat(4, 200px);
  display: inline-grid;
  height: auto;
}

.grid-flow {
  display: grid;
  grid-template-columns: repeat(5, 1fr);
  grid-template-rows: repeat(3, 90px);
  grid-auto-flow: row;
  grid-auto-rows: auto;
  grid-auto-flow: column;
  grid-auto-columns: 100px;
}


.grid-flow-dense {
  display: grid;
  grid-template-columns: repeat(5, 1fr);
  grid-template-rows: repeat(4, 200px);
  grid-auto-flow: row dense;
}

.grid-flow-dense .item:nth-child(9) {
  background-color: cyan;
  /* grid-row: span 3; */
  grid-column: span 3;
}

.grid-layers {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: repeat(4, 1fr);
}

.grid-layers .item:nth-child(1) {
  grid-column: 1 / 3;
  grid-row: 1 / 3;
}

.grid-layers .item:nth-child(2) {
  grid-column: 3 / 5;
  grid-row: 1 / 3;
}

.grid-layers .item:nth-child(3) {
  grid-column: 1 / 3;
  grid-row: 3 / 5;
}

.grid-layers .item:nth-child(4) {
  grid-column: 3 / 5;
  grid-row: 3 / 5;
}

.grid-layers .item:nth-child(5) {
  grid-column: 2 / 4;
  grid-row: 2 / 4;
}


.grid-order {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(2, 1fr);
}


.grid-order .item:nth-child(3) {
  order: 1;
}

.grid-align {
  display: grid;
  grid-template-columns: repeat(3, 200px);
  grid-template-rows: repeat(3, 200px);
  justify-items: start;
  align-items: center;
  }

.grid-align .item:nth-child(4) {
  display: flex;
  justify-content: center;
  align-items: center;
  justify-self: end;
}

.grid-align-tracks {
  display: grid;
  grid-template-columns: repeat(3, 200px);
  grid-template-rows: repeat(2, 200px);
  justify-content: space-between;
  justify-items: stretch;
  align-content: space-around;
}

.grid-align-tracks .item:nth-child(4){
  justify-self: start;
  align-self: end;
}


.grid-min-max{
  display: grid;
  grid-template-columns: repeat(4,1fr);
  grid-template-columns: repeat(4,minmax(min-content,max-content));
}

.grid-repeat{
  display: grid;
  grid-template-columns: repeat(1,10% 20% 30% 40%);
  grid-template-rows: repeat(2, 100px 200px);
  grid-auto-rows: 200px;
  /* height: auto; */
}

.grid-dynamics{
  display: grid;
  grid-template-columns: repeat(auto-fit,200px);
  grid-template-rows: 1fr;
  height: auto;
  grid-template-columns: repeat(auto-fit,minmax(200px, 1fr));
}

.grid-dynamics img{
  width: 100%;
  height: 100%;
}

.grid-responsive {
  display: grid;
  /* Grid de ?cx?r */
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
}

.grid-nested {
  display: grid;
  /* Grid de 3cx?r */
  grid-template-columns: repeat(3, 1fr);
}

.grid {
  display: grid;
  /* Grid de 3cx4r */
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(4, 1fr);
}

.subgrid {
  /* Para que la característica de subgrid funcione es necesario hacer los siguiente:
    1) Definir explícitamente el tamaño que ocupará el elemento que aplicará subgrid dentro del contenedor padre grid, es decir definir sus propiedades grid-column y grid-row.
    2) Aplicar display grid al elemento que aplicará subgrid.
    3) Aplicar el valor de subgrid a las columnas, a las filas o ambas depende de cómo se requiera */
  grid-column: span 3;
  grid-row: 1 / 3;
  display: grid;
  grid-template-columns: subgrid;
  grid-template-rows: subgrid;
}



